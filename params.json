{"name":"Mekabot","tagline":"Mekabot M3 : open source realtime control system for the meka robots","body":"M3 Installation instructions\r\n==============\r\n\r\nThis wiki describes the full installation of m3 software to control/simulate the Meka robot at Ensta ParisTech.\r\n\r\n>  *Author* : Antoine Hoarau <hoarau.robotics@gmail.com>\r\n\r\n\r\n| ***OS Tested*** | ***Status*** | ***Notes***\r\n|:------------------|:----:|:---------------:\r\n| Ubuntu 12.04 x86 | OK | Kinects might cause issues \r\n| Ubuntu 12.04 x64 | OK | Kinects might cause issues \r\n| Ubuntu 12.10 x86 | OK | On the Meka 04.04.14 -> will update to 14.04 LTS when ready \r\n| Ubuntu 12.10 x64 | OK | Now working 04.04.14 \r\n| Ubuntu 13.04 x86 | OK | \r\n| Ubuntu 13.04 x64 | OK | \r\n| Ubuntu 13.10 x86 | OK | w ROS Indigo \r\n| Ubuntu 14.04 x64 | OK | w ROS Indigo/MoveIt! \r\n\r\n\r\n## Ubuntu 12.04 - 14.04 (x86/x64) w/ ROS Hydro/Indigo\r\n\r\n### Prerequisites\r\n#### Necessary \r\n```bash\r\nsudo apt-get install cmake git libeigen3-dev libprotobuf-dev protobuf-compiler gnuplot-x11 libboost-dev python-dev python-protobuf python-matplotlib python-yaml python-gnuplot python-scipy python-sip-dev python-sip sip-dev swig python-pandas python-sympy python-nose python-numpy\r\n```\r\n#### Nice to have to maybe compile a kernel later\r\n```bash\r\nsudo apt-get install libqt4-dev moc g++ libncurses5-dev kernel-package gcc-multilib libc6-dev libtool automake  openssh-server openssh-client\r\n```\r\n------\r\n\r\n### The RTAI-patched kernel\r\n#### Download\r\n```bash\r\n# Determine if x86 or x64 (x86_x64)\r\n_platform=$(uname -m) \r\n\r\n# Get the Rtai4.0 patched kernel headers\r\nwget http://perso.ensta-paristech.fr/~hoarau/rtmeka-kern/$_platform/linux-headers-rt.deb\r\n\r\n# Get the Rtai4.0 patched kernel image\r\nwget http://perso.ensta-paristech.fr/~hoarau/rtmeka-kern/$_platform/linux-image-rt.deb\r\n```\r\n#### Installation\r\n\r\n```bash\r\nsudo dpkg -i linux-headers-rt.deb linux-image-rt.deb\r\n```\r\n\r\nNow **boot** on the new kernel using **grub** at **startup**. Please note the name of the kernel.\r\n> Note : you might have to either hold sift on startup or update the grub config to boot on the rtai patched kernel: \r\n```bash\r\nsudo nano /etc/defaults/grub\r\n```\r\n\r\n### RTAI 4.0 installation \r\n#### Download\r\n```bash\r\nwget --no-check-certificate https://www.rtai.org/userfiles/downloads/RTAI/rtai-4.0.tar.bz2\r\ntar xjf rtai-4.0.tar.bz2\r\n```\r\n\r\n#### Installation\r\n```bash\r\ncd rtai-4.0\r\nmkdir build; cd build\r\n../configure --disable-comedi-lxrt --enable-cpus=$(nproc) --enable-math-c99 --with-linux-dir=/usr/src/linux-headers-3.8.13-rtmeka4.0\r\nmake -j$(nproc)\r\nsudo make install\r\n```\r\n> **Note** : The --with-linux-dir option has to match the rtai-patched kernel\r\n\r\n> ----\r\n> **Know issues** : On 64-bit CPUs, if an error regarding -mpreferred-cache-boundary=3 shows up, edit line 57 in /usr/src/linux/arch/x86/Makefile (where linux is your rtai patched kernel) to set this parameter to 4:\r\n```bash\r\nKBUILD_CFLAGS += $(call cc-option,-mno-sse -mpreferred-stack-boundary=4)\r\n```\r\nPart of the explanation: http://mail.rtai.org/pipermail/rtai/2013-December/026198.html\r\n\r\n> ----\r\n> **Know issues** : on 12.04 32 bits machines, rtai fails to compile (some header is missing)\r\n```bash\r\nsudo apt-get install gcc-multilib g++-multilib libc6-dev\r\nsudo ln -s /usr/include/i386-linux-gnu/gnu/stubs-32.h /usr/include/gnu/stubs-32.h\r\n```\r\n\r\n### Post install\r\nUpdate the ld library path to find rtai:\r\n```bash\r\nsudo -s\r\necho /usr/realtime/lib/ > /etc/ld.so.conf.d/rtai.conf\r\nexit\r\nsudo ldconfig\r\n```\r\n\r\n\r\n## Install ROS\r\n```bash\r\ncodename=`cat /etc/lsb-release | grep -m 1 \"DISTRIB_CODENAME=\" | cut -d \"=\" -f2`\r\nsudo sh -c \"echo 'deb http://packages.ros.org/ros/ubuntu $codename main' > /etc/apt/sources.list.d/ros-latest.list\"\r\n```\r\n#### For Ensta people : use local repo (way faster)\r\n```bash\r\ncodename=`cat /etc/lsb-release | grep -m 1 \"DISTRIB_CODENAME=\" | cut -d \"=\" -f2`\r\nsudo sh -c \"echo 'deb http://fermion.ensta.fr/ros/ubuntu $codename main' > /etc/apt/sources.list.d/ros-latest.list\"\r\n```\r\n\r\n> If on Ubuntu < 13.10\r\n```bash\r\nROS_DISTRO=hydro\r\n```\r\n\r\n> If on Ubuntu > 13.10\r\n```bash\r\nROS_DISTRO=indigo\r\n```\r\n\r\n#### ROS + MoveIt! + ROS Control\r\n```bash\r\nwget http://packages.ros.org/ros.key -O - | sudo apt-key add -\r\nsudo apt-get update\r\nsudo apt-get install ros-$ROS_DISTRO-desktop-full ros-$ROS_DISTRO-moveit-* ros-$ROS_DISTRO-ros-control ros-$ROS_DISTRO-ros-controllers python-rosinstall python-pip\r\n```\r\n```bash\r\nsudo -E rosdep init\r\nrosdep update\r\n```\r\n#### Openni (ROS Hydro Only)\r\n```bash\r\nsudo apt-get install ros-$ROS_DISTRO-openni*\r\n```\r\n\r\n#### Create the ROS-workspace\r\n```bash\r\nsource /opt/ros/$ROS_DISTRO/setup.bash\r\n## Create the ROS-workspace\r\nmkdir -p ~/catkin_ws/src\r\ncd ~/catkin_ws/src\r\ncatkin_init_workspace\r\ncd ~/catkin_ws/\r\ncatkin_make\r\n```\r\n\r\n#### Post-install\r\n```bash\r\nsudo -s\r\necho '/usr/local/lib' >> /etc/ld.so.conf\r\nexit\r\nsudo ldconfig\r\n```\r\n\r\n### Workaround for KDL issues\r\n\r\nThe function SetPayload that allow to modify how much weight the robot carries requires a tiny patch on the KDL library. This is a temporary solution.\r\n\r\n```bash\r\n#cd ~/catkin_ws/src\r\n#git clone https://github.com/ahoarau/orocos_kinematics_dynamics\r\n#cd orocos_kinematics_dynamics/orocos_kdl\r\n#mkdir build;cd build; cmake ..\r\n#make -j5\r\n#sudo make install\r\n#cd ../../python_orocos_kdl/\r\n#mkdir build;cd build;cmake ..\r\n#make -j5\r\n#sudo make install \r\n```\r\n\r\n> Note : This issue has been fixed in june 2014, we now use the ros orocos kdl.\r\n\r\n### (Recommended) Install some IDEs\r\n\r\n#### Python (for most users): Eclipse + PyDev\r\n```bash\r\nsudo apt-get install eclipse\r\n```\r\n\r\n#### ROS and C++ Real-time (Advanced users): Qt creator and/or Kdevelop\r\n```bash\r\nsudo apt-get install qtcreator \r\nsudo apt-get install kdevelop\r\n```\r\n\r\n##Install ENSTA M3\r\n\r\n### Download\r\n```bash\r\ngit clone --recursive git@bitbucket.org:ensta/mekabot.git ~/mekabot\r\ncd ~/mekabot\r\ngit submodule init\r\ngit submodule update\r\ngit submodule foreach git checkout master\r\n```\r\n### Installation\r\n#### Holomni PCV for the mobile base\r\n> If on Ubuntu 14.04 LTS:\r\n```bash\r\nsudo -E add-apt-repository ppa:hoarau-robotics/ppa\r\nsudo apt-get update\r\nsudo apt-get install holomni-pcv\r\n```\r\n> If not :\r\n```bash\r\ncd ~/mekabot\r\ncd holomni_pcv\r\nmkdir build;cd build\r\ncmake .. -DCMAKE_BUILD_TYPE=Release\r\nmake -j5\r\nsudo make install\r\n```\r\n\r\n#### Mekabot\r\n\r\n```bash\r\ncd ~/mekabot\r\nmkdir build;cd build\r\ncmake .. -DETHERCAT=0 -DCMAKE_BUILD_TYPE=Release\r\nmake -j5\r\nsudo make install\r\n```\r\n\r\n> Note : future option -DVIRTUAL=1 will remove fake ethercat module synchronization to avoid overrruns\r\n\r\n## Update your bashrc\r\n```bash\r\ntouch ~/.m3rc\r\necho '\r\n##################################################################\r\n## Meka\r\n\r\n#export M3_ROBOT=~/mekabot/m3ens/real_meka # Real meka config\r\nexport M3_ROBOT=~/mekabot/m3ens/virtual_meka # Simulated Meka\r\nexport MALLOC_CHECK_=0 # Some Hack for Python\r\nsource /usr/local/share/m3/setup.bash\r\n\r\n##################################################################\r\n## ROS\r\n\r\n#export ROS_MASTER_URI=http://meka-moch:11311 # If on real Meka, roscore is launched from meka-moch\r\n#export ROS_IP=192.168.20.117 # Fix here your IP to avoid conflicts on Meka\r\nsource /opt/ros/hydro/setup.bash # Can be Hydro or Indigo\r\n\r\n##################################################################\r\n## ROS-workspace\r\n\r\nsource ~/catkin_ws/install_isolated/setup.bash\r\nsource ~/catkin_ws/devel/setup.bash\r\n\r\n##################################################################\r\n## Additional Meka-stuff\r\n\r\nexport ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/mekabot/m3ens-demos/ros:~/mekabot/m3ens-tutos/ros:~/mekabot/m3ens-utils/ros:~/mekabot/meka-ros-pkg:~/mekabot/m3core/ros:~/mekabot/m3meka/ros\r\nexport PYTHONPATH=$PYTHONPATH:~/mekabot/m3ens-demos/scripts:~/mekabot/m3ens-utils/scripts:~/mekabot/m3ens-utils/python:~/mekabot/m3ens-utils/ros\r\n'>>~/.m3rc\r\n\r\necho 'source ~/.m3rc' >> ~/.bashrc\r\nsource ~/.bashrc\r\n```\r\n\r\n### Get time synchronization for ROS (HIGHLY RECOMMENDED)\r\n```bash\r\nsudo apt-get install ntp\r\nsudo nano /etc/ntp.conf\r\n```\r\nComment all the servers lines and add 'server ensta.ensta.fr'.\r\nIt should look like that : \r\n```bash\r\n#server 0.ubuntu.pool.ntp.org\r\n#server 1.ubuntu.pool.ntp.org\r\n#server 2.ubuntu.pool.ntp.org\r\n#server 3.ubuntu.pool.ntp.org\r\nserver ensta.ensta.fr\r\n\r\n# Use Ubuntu's ntp server as a fallback (or not at ensta ;) )\r\nserver ntp.ubuntu.com\r\n```\r\n```bash\r\nsudo service ntp restart\r\n```\r\n\r\n> (OPTIONAL) Force the time to update every day (can drift after long shutdown) \r\n```bash\r\nsudo -s\r\ntouch /etc/cron.daily/ntpdate\r\necho '#!/bin/sh\r\nntpdate ensta.ensta.fr'>>/etc/cron.daily/ntpdate\r\nexit\r\nsudo chmod 755 /etc/cron.daily/ntpdate\r\n```\r\n\r\n\r\n\r\n### (OPTIONAL) Setup robot's Pcs :\r\n```bash\r\nsudo -s\r\necho '192.168.20.117 meka-mob'>>/etc/hosts\r\necho '192.168.20.118 meka-moch'>>/etc/hosts\r\necho '192.168.20.119 meka-mud'>>/etc/hosts\r\nexit\r\n```\r\n\r\n## Update the hostname (virtual installation)\r\nIf you want to run a simulated robot, you need to be the realtime controller and client. To do so, open the robot_config :\r\n\r\n```bash\r\ngedit ~/mekabot/m3ens/robot_config/m3_config.yml\r\n```\r\n\r\nAnd change the host name to your computer's hostname.\r\n\r\n```bash\r\nmore /etc/hostname\r\n```\r\n## Run the server and visualize the robot on Rviz\r\n```bash\r\nm3rt_server_run # run the realtime server\r\nroslaunch meka_description m3ens_viz.launch # launch robot description, robot state publisher, joint state publisher and rviz\r\n```\r\n\r\n## You're done !\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}