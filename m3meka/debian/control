Source: m3meka
Priority: extra
Maintainer: Pierre-Luc Bacon <info@mekabot.com>
Build-Depends: debhelper (>= 7), autotools-dev, libeigen2-dev, libprotobuf-dev, protobuf-compiler, libyaml-cpp-dev, python-support,  python-all-dbg, python-all, python-dev, python-all-dev, ros-cturtle-ros, ros-cturtle-common, ros-cturtle-common-msgs,  ros-cturtle-geometry,  ros-cturtle-laser-pipeline,  ros-cturtle-robot-model,  ros-cturtle-visualization, ros-cturtle-visualization-common, m3core
Standards-Version: 3.8.3
Section: devel
Homepage: http://mekabot.com
Vcs-Hg: http://mekabot-dev.com/svn/m3meka/trunk
XS-Python-Version: 2.6

Package: m3meka
Section: devel
Architecture: any
Depends: libeigen2-dev, libprotobuf-dev, protobuf-compiler, libyaml-cpp-dev, python-gnuplot, python-numeric, python-scipy, swig, m3core, sip4,libprotobuf-dev, ${python:Depends}, ${shlibs:Depends}, ${misc:Depends}
Description: M3 Real Time Control Software
 All Meka robots utilize our high performance M3 realtime control system. 
 M3 is designed to maximize the on-time of the robot and to minimize development 
 cycle time, freeing you up to focus on what really matters. M3 utilizes an 
 EtherCAT control bus, giving you fine-grained, low-latency, time-synchronized 
 access to sensor data and motor controllers.
 .
 M3 hardware peripherals are plug-and-play, allowing a new gripper, sensor, or 
 arm to be easily integrated into your robot. With M3, robot behaviors can be 
 scripted using the Python API. For users that want to develop their own custom 
 realtime controllers, M3 supports a C++ plug-in architecture on the RTOS. 
 All of our robots come equipped with force, joint space, and cartesian space controllers.

